/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.consistent.tracking.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Userlog service. Represents a row in the &quot;CONSIS_TRACK_Userlog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.consistent.tracking.model.impl.UserlogModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.consistent.tracking.model.impl.UserlogImpl}.
 * </p>
 *
 * @author Jorge Loayza Soloisolo
 * @see Userlog
 * @see com.liferay.consistent.tracking.model.impl.UserlogImpl
 * @see com.liferay.consistent.tracking.model.impl.UserlogModelImpl
 * @generated
 */
public interface UserlogModel extends BaseModel<Userlog> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a userlog model instance should use the {@link Userlog} interface instead.
	 */

	/**
	 * Returns the primary key of this userlog.
	 *
	 * @return the primary key of this userlog
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this userlog.
	 *
	 * @param primaryKey the primary key of this userlog
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the userlog ID of this userlog.
	 *
	 * @return the userlog ID of this userlog
	 */
	public long getUserlogId();

	/**
	 * Sets the userlog ID of this userlog.
	 *
	 * @param userlogId the userlog ID of this userlog
	 */
	public void setUserlogId(long userlogId);

	/**
	 * Returns the company ID of this userlog.
	 *
	 * @return the company ID of this userlog
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this userlog.
	 *
	 * @param companyId the company ID of this userlog
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this userlog.
	 *
	 * @return the user ID of this userlog
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this userlog.
	 *
	 * @param userId the user ID of this userlog
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this userlog.
	 *
	 * @return the user uuid of this userlog
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this userlog.
	 *
	 * @param userUuid the user uuid of this userlog
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this userlog.
	 *
	 * @return the user name of this userlog
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this userlog.
	 *
	 * @param userName the user name of this userlog
	 */
	public void setUserName(String userName);

	/**
	 * Returns the server name of this userlog.
	 *
	 * @return the server name of this userlog
	 */
	@AutoEscape
	public String getServerName();

	/**
	 * Sets the server name of this userlog.
	 *
	 * @param serverName the server name of this userlog
	 */
	public void setServerName(String serverName);

	/**
	 * Returns the server port of this userlog.
	 *
	 * @return the server port of this userlog
	 */
	public int getServerPort();

	/**
	 * Sets the server port of this userlog.
	 *
	 * @param serverPort the server port of this userlog
	 */
	public void setServerPort(int serverPort);

	/**
	 * Returns the remote host of this userlog.
	 *
	 * @return the remote host of this userlog
	 */
	@AutoEscape
	public String getRemoteHost();

	/**
	 * Sets the remote host of this userlog.
	 *
	 * @param remoteHost the remote host of this userlog
	 */
	public void setRemoteHost(String remoteHost);

	/**
	 * Returns the remote address of this userlog.
	 *
	 * @return the remote address of this userlog
	 */
	@AutoEscape
	public String getRemoteAddress();

	/**
	 * Sets the remote address of this userlog.
	 *
	 * @param remoteAddress the remote address of this userlog
	 */
	public void setRemoteAddress(String remoteAddress);

	/**
	 * Returns the os ID of this userlog.
	 *
	 * @return the os ID of this userlog
	 */
	public long getOsId();

	/**
	 * Sets the os ID of this userlog.
	 *
	 * @param osId the os ID of this userlog
	 */
	public void setOsId(long osId);

	/**
	 * Returns the os manufacturer of this userlog.
	 *
	 * @return the os manufacturer of this userlog
	 */
	@AutoEscape
	public String getOsManufacturer();

	/**
	 * Sets the os manufacturer of this userlog.
	 *
	 * @param osManufacturer the os manufacturer of this userlog
	 */
	public void setOsManufacturer(String osManufacturer);

	/**
	 * Returns the browser ID of this userlog.
	 *
	 * @return the browser ID of this userlog
	 */
	public long getBrowserId();

	/**
	 * Sets the browser ID of this userlog.
	 *
	 * @param browserId the browser ID of this userlog
	 */
	public void setBrowserId(long browserId);

	/**
	 * Returns the browser version of this userlog.
	 *
	 * @return the browser version of this userlog
	 */
	@AutoEscape
	public String getBrowserVersion();

	/**
	 * Sets the browser version of this userlog.
	 *
	 * @param browserVersion the browser version of this userlog
	 */
	public void setBrowserVersion(String browserVersion);

	/**
	 * Returns the session ID of this userlog.
	 *
	 * @return the session ID of this userlog
	 */
	@AutoEscape
	public String getSessionId();

	/**
	 * Sets the session ID of this userlog.
	 *
	 * @param sessionId the session ID of this userlog
	 */
	public void setSessionId(String sessionId);

	/**
	 * Returns the access date of this userlog.
	 *
	 * @return the access date of this userlog
	 */
	public long getAccessDate();

	/**
	 * Sets the access date of this userlog.
	 *
	 * @param accessDate the access date of this userlog
	 */
	public void setAccessDate(long accessDate);

	/**
	 * Returns the time slapse of this userlog.
	 *
	 * @return the time slapse of this userlog
	 */
	public long getTimeSlapse();

	/**
	 * Sets the time slapse of this userlog.
	 *
	 * @param timeSlapse the time slapse of this userlog
	 */
	public void setTimeSlapse(long timeSlapse);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Userlog userlog);

	public int hashCode();

	public CacheModel<Userlog> toCacheModel();

	public Userlog toEscapedModel();

	public String toString();

	public String toXmlString();
}