/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.consistent.tracking.model.impl;

import com.liferay.consistent.tracking.model.SearchPhraseHit;
import com.liferay.consistent.tracking.model.SearchPhraseHitModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SearchPhraseHit service. Represents a row in the &quot;CONSIS_TRACK_SearchPhraseHit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.consistent.tracking.model.SearchPhraseHitModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SearchPhraseHitImpl}.
 * </p>
 *
 * @author Jorge Loayza Soloisolo
 * @see SearchPhraseHitImpl
 * @see com.liferay.consistent.tracking.model.SearchPhraseHit
 * @see com.liferay.consistent.tracking.model.SearchPhraseHitModel
 * @generated
 */
public class SearchPhraseHitModelImpl extends BaseModelImpl<SearchPhraseHit>
	implements SearchPhraseHitModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a search phrase hit model instance should use the {@link com.liferay.consistent.tracking.model.SearchPhraseHit} interface instead.
	 */
	public static final String TABLE_NAME = "CONSIS_TRACK_SearchPhraseHit";
	public static final Object[][] TABLE_COLUMNS = {
			{ "hitId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "phraseId", Types.BIGINT },
			{ "guest", Types.BOOLEAN },
			{ "accessDate", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table CONSIS_TRACK_SearchPhraseHit (hitId LONG not null primary key,companyId LONG,phraseId LONG,guest BOOLEAN,accessDate LONG)";
	public static final String TABLE_SQL_DROP = "drop table CONSIS_TRACK_SearchPhraseHit";
	public static final String ORDER_BY_JPQL = " ORDER BY searchPhraseHit.phraseId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CONSIS_TRACK_SearchPhraseHit.phraseId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.consistent.tracking.model.SearchPhraseHit"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.consistent.tracking.model.SearchPhraseHit"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.consistent.tracking.model.SearchPhraseHit"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GUEST_COLUMN_BITMASK = 2L;
	public static long PHRASEID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.consistent.tracking.model.SearchPhraseHit"));

	public SearchPhraseHitModelImpl() {
	}

	public long getPrimaryKey() {
		return _hitId;
	}

	public void setPrimaryKey(long primaryKey) {
		setHitId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_hitId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return SearchPhraseHit.class;
	}

	public String getModelClassName() {
		return SearchPhraseHit.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("hitId", getHitId());
		attributes.put("companyId", getCompanyId());
		attributes.put("phraseId", getPhraseId());
		attributes.put("guest", getGuest());
		attributes.put("accessDate", getAccessDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long hitId = (Long)attributes.get("hitId");

		if (hitId != null) {
			setHitId(hitId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long phraseId = (Long)attributes.get("phraseId");

		if (phraseId != null) {
			setPhraseId(phraseId);
		}

		Boolean guest = (Boolean)attributes.get("guest");

		if (guest != null) {
			setGuest(guest);
		}

		Long accessDate = (Long)attributes.get("accessDate");

		if (accessDate != null) {
			setAccessDate(accessDate);
		}
	}

	public long getHitId() {
		return _hitId;
	}

	public void setHitId(long hitId) {
		_hitId = hitId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	public long getPhraseId() {
		return _phraseId;
	}

	public void setPhraseId(long phraseId) {
		_columnBitmask = -1L;

		if (!_setOriginalPhraseId) {
			_setOriginalPhraseId = true;

			_originalPhraseId = _phraseId;
		}

		_phraseId = phraseId;
	}

	public long getOriginalPhraseId() {
		return _originalPhraseId;
	}

	public boolean getGuest() {
		return _guest;
	}

	public boolean isGuest() {
		return _guest;
	}

	public void setGuest(boolean guest) {
		_columnBitmask |= GUEST_COLUMN_BITMASK;

		if (!_setOriginalGuest) {
			_setOriginalGuest = true;

			_originalGuest = _guest;
		}

		_guest = guest;
	}

	public boolean getOriginalGuest() {
		return _originalGuest;
	}

	public long getAccessDate() {
		return _accessDate;
	}

	public void setAccessDate(long accessDate) {
		_accessDate = accessDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SearchPhraseHit.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SearchPhraseHit toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (SearchPhraseHit)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		SearchPhraseHitImpl searchPhraseHitImpl = new SearchPhraseHitImpl();

		searchPhraseHitImpl.setHitId(getHitId());
		searchPhraseHitImpl.setCompanyId(getCompanyId());
		searchPhraseHitImpl.setPhraseId(getPhraseId());
		searchPhraseHitImpl.setGuest(getGuest());
		searchPhraseHitImpl.setAccessDate(getAccessDate());

		searchPhraseHitImpl.resetOriginalValues();

		return searchPhraseHitImpl;
	}

	public int compareTo(SearchPhraseHit searchPhraseHit) {
		int value = 0;

		if (getPhraseId() < searchPhraseHit.getPhraseId()) {
			value = -1;
		}
		else if (getPhraseId() > searchPhraseHit.getPhraseId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		SearchPhraseHit searchPhraseHit = null;

		try {
			searchPhraseHit = (SearchPhraseHit)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = searchPhraseHit.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SearchPhraseHitModelImpl searchPhraseHitModelImpl = this;

		searchPhraseHitModelImpl._originalCompanyId = searchPhraseHitModelImpl._companyId;

		searchPhraseHitModelImpl._setOriginalCompanyId = false;

		searchPhraseHitModelImpl._originalPhraseId = searchPhraseHitModelImpl._phraseId;

		searchPhraseHitModelImpl._setOriginalPhraseId = false;

		searchPhraseHitModelImpl._originalGuest = searchPhraseHitModelImpl._guest;

		searchPhraseHitModelImpl._setOriginalGuest = false;

		searchPhraseHitModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SearchPhraseHit> toCacheModel() {
		SearchPhraseHitCacheModel searchPhraseHitCacheModel = new SearchPhraseHitCacheModel();

		searchPhraseHitCacheModel.hitId = getHitId();

		searchPhraseHitCacheModel.companyId = getCompanyId();

		searchPhraseHitCacheModel.phraseId = getPhraseId();

		searchPhraseHitCacheModel.guest = getGuest();

		searchPhraseHitCacheModel.accessDate = getAccessDate();

		return searchPhraseHitCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{hitId=");
		sb.append(getHitId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", phraseId=");
		sb.append(getPhraseId());
		sb.append(", guest=");
		sb.append(getGuest());
		sb.append(", accessDate=");
		sb.append(getAccessDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.liferay.consistent.tracking.model.SearchPhraseHit");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>hitId</column-name><column-value><![CDATA[");
		sb.append(getHitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>phraseId</column-name><column-value><![CDATA[");
		sb.append(getPhraseId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>guest</column-name><column-value><![CDATA[");
		sb.append(getGuest());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accessDate</column-name><column-value><![CDATA[");
		sb.append(getAccessDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SearchPhraseHit.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			SearchPhraseHit.class
		};
	private long _hitId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _phraseId;
	private long _originalPhraseId;
	private boolean _setOriginalPhraseId;
	private boolean _guest;
	private boolean _originalGuest;
	private boolean _setOriginalGuest;
	private long _accessDate;
	private long _columnBitmask;
	private SearchPhraseHit _escapedModelProxy;
}